#include "manage.h"


EXEC SQL BEGIN DECLARE SECTION;

EXEC SQL END DECLARE SECTION;


VARCHAR uid[80];
VARCHAR pwd[20];

#define PAGE_NUM 5
void Get_tuple()
{
	/* --------------------------------------------------------------------------
	   Retrieve the current maximum employee number
	-------------------------------------------------------------------------- */
	EXEC SQL BEGIN DECLARE SECTION;
	varchar r_rnum[100];
	varchar r_person[100];
	varchar r_stu_a[100];
	varchar r_stu_b[100];
	varchar r_isa[100];
	varchar r_isb[100];

	char dynstmt[1000];
	EXEC SQL END DECLARE SECTION;

	char no_room[10];
	char no_page[2];

	int x, y, count = 0, i;
	int wrong_no = 0;


	/* Register sql_error() as the error handler. */
	EXEC SQL WHENEVER SQLERROR DO sql_error("\7ORACLE ERROR:\n");

	while(1){
		clrscr();
		gotoxy(0,1);
		print_screen("searchRoom.txt");
		if(wrong_no == 0){
			gotoxy(35, 7);
		}
		else {
			gotoxy(8, 10);
			printf("없는 호실 번호입니다. 다시 입력해주세요.");
			gotoxy(35, 7);
		}

		gets(no_room);
		gotoxy(15,15);
		
		//1부터 49
		if (no_room[0] > 53 || no_room[1]>49 || (no_room[1]==49 && no_room[2]>48)) {
			wrong_no = 1;
		}
		else {
			gotoxy(8, 10);
			printf("                                                                                      ");
			break;
		}
	}
	/* 사용자 입력 */
	
	gotoxy(1, 11);
	printf(" |  방 번호  | 인원수 |    A    |    B   | A재실 | B재실 |");
	gotoxy(1, 12);
	printf(" ---------------------------------------------------------");


	/* 실행시킬 SQL 문장*/
	sprintf(dynstmt, "SELECT * FROM ROOM_MANAGE where to_char(R_RNUM) LIKE '%%%s%%' ", no_room);

	/* select 문장이 제대로 구성되어 있는지 화면에 찍어봄 */
	//printf("dynstmt:%s\n", dynstmt);

	EXEC SQL PREPARE S FROM : dynstmt;

	/* cursor 선언 */
	EXEC SQL DECLARE c_cursor CURSOR FOR S;

	/* cursor open */
	EXEC SQL OPEN c_cursor;

	EXEC SQL WHENEVER NOT FOUND DO break;

	x = 1;
	y = 13;

	for (;;)
	{
		EXEC SQL FETCH c_cursor INTO : r_rnum, : r_person, : r_stu_a, : r_stu_b, : r_isa, : r_isb;

		r_rnum.arr[r_rnum.len] = '\0';
		r_person.arr[r_person.len] = '\0';
		r_stu_a.arr[r_stu_a.len] = '\0';
		r_stu_b.arr[r_stu_b.len] = '\0';
		r_isa.arr[r_isa.len] = '\0';
		r_isb.arr[r_isb.len] = '\0';
		gotoxy(x, y);
		printf(" |    %s    |    %s   |  %s | %s |   %s   |   %s   |", r_rnum.arr, r_person.arr, r_stu_a.arr, r_stu_b.arr, r_isa.arr, r_isb.arr);
		y++;
		count++;
	}
	gotoxy(7, 18);
	printf("(수정 1, 삭제 2, 이전 페이지 3, 종료 4) >> ___ ");
	gotoxy(51, 18);
	gets(no_page);
	if(no_page[0] == 49)
		printf("수정 불러오기");
	else if(no_page[0] == 50)
		printf("삭제 불러오기");
	else if(no_page[0] == 51)
		printf("이전페이지 불러오기");
	else if(no_page[0] == 52)
		exit(1);
	/* Close the cursor. */
	EXEC SQL CLOSE c_cursor;

	EXEC SQL COMMIT;
}

void main()
{
	//한글을 사용하기 위한 코드
	_putenv("NLS_LANG=American_America.KO16KSC5601");
	DB_connect();
	Get_tuple();
	EXEC SQL COMMIT WORK RELEASE;
	getch();
}
